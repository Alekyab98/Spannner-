import os
import csv
from datetime import datetime, timedelta
from google.cloud import spanner

# Set environment variable for service account key
os.environ["GOOGLE_APPLICATION_CREDENTIALS"] = "/usr/apps/dtwindo_dev/.keys/sa-dev-gudv-app-dtwndo-0-oidc-25321-config.json"

# Initialize Spanner client
client = spanner.Client(project="vz-it-np-jpuv-dev-anpdo-0")
instance = client.instance("anp-spanner-instance")

# Read input CSV from /home/billaal/input.csv
input_path = "/home/billaal/input.csv"
output_path = "output.csv"

with open(input_path, "r") as infile, open(output_path, "w", newline="") as outfile:
    reader = csv.DictReader(infile)
    writer = csv.writer(outfile)
    writer.writerow(["table_name", "filter_column", "date", "result"])

    for row in reader:
        table = row["table_name"].strip()
        column = row["filter_column"].strip()
        start_date = datetime.strptime(row["start_date"].strip(), "%m/%d/%Y").date()
        end_date = datetime.strptime(row["end_date"].strip(), "%m/%d/%Y").date()

        db_parts = table.split(".")
        if len(db_parts) != 3:
            print(f"Invalid table format: {table}")
            continue

        _, db_id, table_id = db_parts
        database = instance.database(db_id)

        current_date = start_date
        while current_date <= end_date:
            query = f"""
                SELECT {column}
                FROM {table_id}
                WHERE {column} = DATE("{current_date}")
                LIMIT 1
            """
            try:
                with database.snapshot() as snapshot:
                    results = list(snapshot.execute_sql(query))
                    result = "YES" if results else "NO"
            except Exception as e:
                result = f"ERROR: {e}"

            writer.writerow([table, column, str(current_date), result])
            current_date += timedelta(days=1)

print("Done. Output saved to output.csv")
